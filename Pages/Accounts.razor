@page "/account/list"
@attribute [Authorize]
@inject HttpClient Http
@inject IAuthService auth

<h1>Account List</h1>

@if (accounts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p><a href="/account">Create new account</a></p>
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Comment</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var account in accounts)
            {
                <tr>
                    <td><a href="/account/@account.id">@account.name &nbsp;<span class="oi oi-pencil"></span></a></td>
                    <td>@account.comment</td>
                    <td><button @onclick="@(() => DeleteAccount(account.id))" class="btn-delete"><span class="oi oi-trash"></span></button></td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private BlazingPennies.Shared.Models.Account[] accounts;

    protected async Task Refresh()
    {

        // Show loading spinner while data is being fetched
        accounts = null;
        StateHasChanged();

        string user_id = await auth.CurrentUserId();
        accounts = await Http.GetFromJsonAsync<BlazingPennies.Shared.Models.Account[]>($"https://pennypincher.x10.bz/pennydev/account/list.php?user_id={user_id}");

        // Update UI after data is fetched
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        Refresh();
    }

    private async Task DeleteAccount(string id)
    {
        try
        {
            var response = await Http.DeleteAsync($"https://pennypincher.x10.bz/pennydev/account/delete.php?id={id}");
            if (response.IsSuccessStatusCode)
            {
                Refresh();
            }
            else
            {
                Console.WriteLine($"Error deleting account with user ID {id}: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
   
}